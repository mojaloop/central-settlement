stages:
  - build
  - test
  - deploy

.env_vars: &env_vars # There is supported way to use dotenv to do this but it's not available until Gitlab 13.0/13.1 and TIPS is currently on 12.10 https://docs.gitlab.com/ee/ci/variables/#inherit-environment-variables
  - export IMAGE_TAG=${CI_COMMIT_TAG:-$CI_COMMIT_REF_SLUG.$CI_PIPELINE_IID} # Use the commit tag if available for tagging the docker image, otherwise fall back to the slug provided by gitlab, appended with a unique ID

# Dependencies used in multiple jobs
.defaults_Dependencies: &defaults_Dependencies
  - apk --no-cache add git
  - apk --no-cache add ca-certificates
  - apk --no-cache add curl
  - apk --no-cache add openssh-client
  - apk add --no-cache -t build-dependencies make gcc g++ python libtool autoconf automake
  - npm config set unsafe-perm true
  - npm install -g node-gyp

# Build the image and push it to gitlab package registry
Build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - *env_vars
    - docker build --pull -t $CI_REGISTRY_IMAGE:$IMAGE_TAG .
    - docker push "$CI_REGISTRY_IMAGE:$IMAGE_TAG"

# Execute unit tests
Unit Test:
  stage: test
  image: node:12.16.0-alpine
  script:
    - *defaults_Dependencies
    # - cd $(npm root -g)/npm
    # - npm install --no-save github:interledgerjs/five-bells-ledger-api-tests
    - npm install
    # - apk del build-dependencies
    # - mkdir -p ./test/results
    #- npm install -g tape tap-xunit
    #- npm install -g tapes
    - npm -s run test:coverage-check
  #artifacts:
  #  paths:
  #    - ./test/results/*.*
  #  reports:
  #    junit:
  #      - ./test/results/tape.xml


# Add an imagepullsecret and configure the service account to use it
# This allows the cluster to pull images from the private repo
# without needing to modify the upstream OSS helm chart to allow specifying image pull credentials
# NOTE: This step requires a deploy token to be created in this project called gitlab-deploy-token
# See https://docs.gitlab.com/ee/user/project/deploy_tokens/index.html#gitlab-deploy-token for details
Configure Service Account:
  stage: deploy
  image: dtzar/helm-kubectl:2.16.1
  variables:
    KUBE_NAMESPACE: mojaloop # override the generated namespace that gitlab tries to use
  environment:
    name: dev
    kubernetes:
      namespace: mojaloop
  script:
    # Install coreutils so that we can use the GNU version of base64 and disable line wrapping (-w)
    - apk update && apk add coreutils
    # Set the required variables and base64 them
    - USERPASS64=$(echo -n "${CI_DEPLOY_USER}:${CI_DEPLOY_PASSWORD}" | base64 -w 0 )
    - JSON_SECRET=$(echo -n "{\"auths\":{\"${CI_REGISTRY}\":{\"username\":\"${CI_DEPLOY_USER}\",\"password\":\"${CI_DEPLOY_PASSWORD}\",\"email\":\"${GITLAB_USER_EMAIL}\",\"auth\":\"${USERPASS64}\"}}}" | base64 -w 0)
    # Apply the secret yaml
    - |
      cat > secret.yaml <<EOF
      apiVersion: v1
      kind: Secret
      metadata:
        name: ${CI_PROJECT_NAME}-imagepullsecret
      type: kubernetes.io/dockerconfigjson
      data:
        .dockerconfigjson: |
          ${JSON_SECRET}
      EOF
    - kubectl apply -f secret.yaml
    # Patch the service account to use the secret above for image pull
    - |
      kubectl -n mojaloop patch serviceaccount default -p "{\"imagePullSecrets\": [{\"name\": \"${CI_PROJECT_NAME}-imagepullsecret\"}]}"
  only:
    refs:
      - feature/OTC


# Deployment requires the mojaloop cluster to be configured in gitlab
# as per https://gitlab.com/help/user/project/clusters/add_remove_clusters.md#add-existing-cluster
# Note: Disable the 'Gitlab-managed cluster' option
Deploy to Dev:
  stage: deploy
  image: dtzar/helm-kubectl:2.16.1
  variables:
    KUBE_NAMESPACE: mojaloop # override the generated namespace that gitlab tries to use
  environment:
    name: dev
    kubernetes:
      namespace: mojaloop
  script:
    - *env_vars
    # Gitlab doesn't have support for storing helm charts in it's internal registry,
    # so instead we will checkout the tips chart locally and deploy from that
    # Check https://gitlab.com/gitlab-org/gitlab/-/issues/30669 and related issues to see if this has changed
    - git clone --branch feature/OTC https://${CI_REGISTRY_USER}:${CI_JOB_TOKEN}@gitlab.tips-lab.live/tips/tiger/tips-helm-repo.git
    - helm init --client-only
    - cd tips-helm-repo
    - sh ./update-charts-dep.sh
    - echo "Deploying ${CI_REGISTRY_IMAGE} version ${IMAGE_TAG}"
    - |
      helm upgrade mojaloop ./tips \
      --reuse-values \
      --set centralsettlement.image.repository=$CI_REGISTRY_IMAGE \
      --set centralsettlement.image.tag=$IMAGE_TAG
  only:
    refs:
      - feature/OTC
