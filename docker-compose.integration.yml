version: "3.7"
services:
  central-settlement:
    build:
      dockerfile: test-integration.Dockerfile
      context: .
      cache_from: 
        - mojaloop/central-settlement
        - central-settlement:test
    container_name: cs_central-settlement
    links:
      - mysql
      - kafka
      - central-ledger
      - ml-api-adapter
      - simulator
    ports:
      - "3007:3007"
    volumes:
      - ./docker/central-settlement/default.json:/opt/central-settlement/config/default.json
      - ./test:/opt/central-settlement/test
      - ./src:/opt/central-settlement/src
    environment:
      - CENTRAL_LEDGER_HOST=central-ledger
      - ML_API_ADAPTER_HOST=ml-api-adapter
      - SIMULATOR_HOST=simulator
      - SIMULATOR_REMOTE_HOST=simulator
      - TRANSFERS_ILPPACKET=AQAAAAAAAADIEHByaXZhdGUucGF5ZWVmc3CCAiB7InRyYW5zYWN0aW9uSWQiOiIyZGY3NzRlMi1mMWRiLTRmZjctYTQ5NS0yZGRkMzdhZjdjMmMiLCJxdW90ZUlkIjoiMDNhNjA1NTAtNmYyZi00NTU2LThlMDQtMDcwM2UzOWI4N2ZmIiwicGF5ZWUiOnsicGFydHlJZEluZm8iOnsicGFydHlJZFR5cGUiOiJNU0lTRE4iLCJwYXJ0eUlkZW50aWZpZXIiOiIyNzcxMzgwMzkxMyIsImZzcElkIjoicGF5ZWVmc3AifSwicGVyc29uYWxJbmZvIjp7ImNvbXBsZXhOYW1lIjp7fX19LCJwYXllciI6eyJwYXJ0eUlkSW5mbyI6eyJwYXJ0eUlkVHlwZSI6Ik1TSVNETiIsInBhcnR5SWRlbnRpZmllciI6IjI3NzEzODAzOTExIiwiZnNwSWQiOiJwYXllcmZzcCJ9LCJwZXJzb25hbEluZm8iOnsiY29tcGxleE5hbWUiOnt9fX0sImFtb3VudCI6eyJjdXJyZW5jeSI6IlVTRCIsImFtb3VudCI6IjIwMCJ9LCJ0cmFuc2FjdGlvblR5cGUiOnsic2NlbmFyaW8iOiJERVBPU0lUIiwic3ViU2NlbmFyaW8iOiJERVBPU0lUIiwiaW5pdGlhdG9yIjoiUEFZRVIiLCJpbml0aWF0b3JUeXBlIjoiQ09OU1VNRVIiLCJyZWZ1bmRJbmZvIjp7fX19
      - TRANSFERS_FULFILMENT=XoSz1cL0tljJSCp_VtIYmPNw-zFUgGfbUqf69AagUzY
      - TRANSFERS_CONDITION=HOr22-H3AfTDHrSkPjJtVPRdKouuMkDXTR4ejlQa8Ks
    command:
      - tail 
      - -f 
      - /dev/null

  central-ledger:
    image: mojaloop/central-ledger:latest # mojaloop/central-ledger:latest # 
    container_name: central-ledger-int
    command:
      - "sh"
      - "-c"
      - "sh /opt/wait-for/wait-for-central-ledger.sh && node src/api/index.js"
    links:
      - mysql
      - kafka
    depends_on:
      - mysql
      - kafka
    ports:
      - "3001:3001"
    volumes:
       - ./docker/central-ledger/default.json:/opt/central-ledger/config/default.json
       - ./docker/wait-for:/opt/wait-for

  ml-api-adapter:
    image: mojaloop/ml-api-adapter:latest
    container_name: ml-api-adapter-int
    command:
      - "sh"
      - "-c"
      - "sh /opt/wait-for/wait-for-ml-api-adapter.sh && node src/api/index.js"
    links:
      - kafka
      - central-ledger
    depends_on:
      - kafka
      - central-ledger
    ports:
      - "3000:3000"
    volumes:
      - ./docker/ml-api-adapter/default.json:/opt/ml-api-adapter/config/default.json
      - ./docker/wait-for:/opt/wait-for

  mysql:
    image: mysql/mysql-server
    container_name: mysql-int
    ports:
      - "3306:3306"
    volumes:
      #this fixes the permissions issue, but docker-compose up will fail on first attempt
      - ./docker/sql-init/:/docker-entrypoint-initdb.d/
    environment:
      - MYSQL_USER=${DBUSER:-central_ledger}
      - MYSQL_PASSWORD=${DBPASS:-password}
      - MYSQL_DATABASE=${DBUSER:-central_ledger}
      - MYSQL_ALLOW_EMPTY_PASSWORD=true

  simulator:
    image: mojaloop/simulator:latest
    container_name: simulator-int
    links:
      - ml-api-adapter
    depends_on:
      - ml-api-adapter
    ports:
      - "8444:8444"
    environment:
      - TRANSFERS_ENDPOINT=http://ml-api-adapter:3000

#  mockserver:
#    image: jamesdbloom/mockserver
#    container_name: cs_mockserver
#    ports:
#      - "1080:1080"
#
#  temp_curl:
#    image: byrnedo/alpine-curl
#    container_name: cs_temp_curl
#    links:
#      - mockserver
#    volumes:
#      - ./docker/wait-for/wait-for-mockserver.sh:/opt/wait-for/wait-for-mockserver.sh
#    entrypoint: [ "sh", "-c" ]
#    command:
#      - /opt/wait-for/wait-for-mockserver.sh

  kafka:
    image: johnnypark/kafka-zookeeper:2.3.0
    container_name: kafka-int
    # Disable kafka logging as it is far too verbose for debugging locally
    logging:
      driver: none
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      - ADVERTISED_HOST=kafka
